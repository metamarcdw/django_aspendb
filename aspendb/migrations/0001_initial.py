# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-03-08 20:45
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Downtime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('shift', models.IntegerField(validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('minutes', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='DowntimeCode',
            fields=[
                ('code', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(518), django.core.validators.MinValueValidator(101)])),
                ('description', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=40)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('training_level', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='EndOfShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('shift', models.IntegerField(validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('starting_shot', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('ending_shot', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('scheduled_shots', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('missed_shots', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('total_scrap', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('spray_pots', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'N/A')], max_length=3)),
                ('adequate_poly', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('adequate_iso', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('replacement_poly', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'N/A')], max_length=3)),
                ('scrap_labeled', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('cabinet_stocked', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'N/A')], max_length=3)),
                ('pot_grounded', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'N/A')], max_length=3)),
                ('comments', models.CharField(max_length=500)),
                ('total_shots', models.IntegerField()),
                ('oee', models.FloatField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('shift', models.IntegerField(validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('problem', models.CharField(max_length=100)),
                ('urgency', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(max_length=30)),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approved_by', to='aspendb.Employee')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to='aspendb.Employee')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('part_number', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Scrap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('shift', models.IntegerField(validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('bad_mix', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('non_fill', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('collapse', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('tears', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('trim', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('voilds', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('open_voilds', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('under_weight', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('over_weight', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Employee')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Part')),
            ],
        ),
        migrations.CreateModel(
            name='StartOfShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('shift', models.IntegerField(validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('process_verified', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('weights_verified', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('mix_ratio', models.FloatField(validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(0)])),
                ('poly_temp', models.FloatField(validators=[django.core.validators.MaxValueValidator(90), django.core.validators.MinValueValidator(60)])),
                ('iso_temp', models.FloatField(validators=[django.core.validators.MaxValueValidator(90), django.core.validators.MinValueValidator(60)])),
                ('poly_flow', models.FloatField(validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(20)])),
                ('iso_flow', models.FloatField(validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(20)])),
                ('poly_pressure', models.IntegerField(validators=[django.core.validators.MaxValueValidator(2500), django.core.validators.MinValueValidator(500)])),
                ('iso_pressure', models.IntegerField(validators=[django.core.validators.MaxValueValidator(2500), django.core.validators.MinValueValidator(500)])),
                ('adequate_components', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'N/A')], max_length=3)),
                ('airhose_secure', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'N/A')], max_length=3)),
                ('poly_agitator', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('chemical_tracked', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'N/A')], max_length=3)),
                ('poly_date', models.DateField()),
                ('iso_date', models.DateField()),
                ('stands_labels', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('new_product', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('opposite_parts', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Workcell',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('foam_system', models.CharField(max_length=30)),
                ('cell_leader_1st', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cell_leader_1st', to='aspendb.Employee')),
                ('cell_leader_2nd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cell_leader_2nd', to='aspendb.Employee')),
            ],
        ),
        migrations.AddField(
            model_name='startofshift',
            name='workcell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Workcell'),
        ),
        migrations.AddField(
            model_name='scrap',
            name='workcell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Workcell'),
        ),
        migrations.AddField(
            model_name='part',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Program'),
        ),
        migrations.AddField(
            model_name='part',
            name='workcell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Workcell'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='workcell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Workcell'),
        ),
        migrations.AddField(
            model_name='endofshift',
            name='workcell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Workcell'),
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together=set([('first_name', 'last_name')]),
        ),
        migrations.AddField(
            model_name='downtime',
            name='code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.DowntimeCode'),
        ),
        migrations.AddField(
            model_name='downtime',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Employee'),
        ),
        migrations.AddField(
            model_name='downtime',
            name='workcell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aspendb.Workcell'),
        ),
        migrations.AlterUniqueTogether(
            name='startofshift',
            unique_together=set([('date', 'shift', 'workcell')]),
        ),
        migrations.AlterUniqueTogether(
            name='scrap',
            unique_together=set([('date', 'shift', 'workcell', 'part')]),
        ),
        migrations.AlterUniqueTogether(
            name='endofshift',
            unique_together=set([('date', 'shift', 'workcell')]),
        ),
        migrations.AlterUniqueTogether(
            name='downtime',
            unique_together=set([('date', 'shift', 'workcell')]),
        ),
    ]
